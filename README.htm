<!DOCTYPE html>
<!-- saved from url=(0052)file:///C:/users/happyw~1/appdata/local/temp/22.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8"><meta charset="utf-8"><style>html { font-size: 100%; overflow-y: scroll; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; }

body{
  color:#444;
  font-family:Georgia, Palatino, 'Palatino Linotype', Times, 'Times New Roman',
              "Hiragino Sans GB", "STXihei", "微软雅黑", serif;
  font-size:12px;
  line-height:1.5em;
  background:#fefefe;
  width: 45em;
  margin: 10px auto;
  padding: 1em;
  outline: 1300px solid #FAFAFA;
}

a{ color: #0645ad; text-decoration:none;}
a:visited{ color: #0b0080; }
a:hover{ color: #06e; }
a:active{ color:#faa700; }
a:focus{ outline: thin dotted; }
a:hover, a:active{ outline: 0; }

span.backtick {
  border:1px solid #EAEAEA;
  border-radius:3px;
  background:#F8F8F8;
  padding:0 3px 0 3px;
}

::-moz-selection{background:rgba(255,255,0,0.3);color:#000}
::selection{background:rgba(255,255,0,0.3);color:#000}

a::-moz-selection{background:rgba(255,255,0,0.3);color:#0645ad}
a::selection{background:rgba(255,255,0,0.3);color:#0645ad}

p{
margin:1em 0;
}

img{
max-width:100%;
}

h1,h2,h3,h4,h5,h6{
font-weight:normal;
color:#111;
line-height:1em;
}
h4,h5,h6{ font-weight: bold; }
h1{ font-size:2.5em; }
h2{ font-size:2em; border-bottom:1px solid silver; padding-bottom: 5px; }
h3{ font-size:1.5em; }
h4{ font-size:1.2em; }
h5{ font-size:1em; }
h6{ font-size:0.9em; }

blockquote{
color:#666666;
margin:0;
padding-left: 3em;
border-left: 0.5em #EEE solid;
}
hr { display: block; height: 2px; border: 0; border-top: 1px solid #aaa;border-bottom: 1px solid #eee; margin: 1em 0; padding: 0; }


pre , code, kbd, samp { 
  color: #000; 
  font-family: monospace; 
  font-size: 0.88em; 
  border-radius:3px;
  background-color: #F8F8F8;
  border: 1px solid #CCC; 
}
pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; padding: 5px 12px;}
pre code { border: 0px !important; padding: 0;}
code { padding: 0 3px 0 3px; }

b, strong { font-weight: bold; }

dfn { font-style: italic; }

ins { background: #ff9; color: #000; text-decoration: none; }

mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; }

sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }
sup { top: -0.5em; }
sub { bottom: -0.25em; }

ul, ol { margin: 1em 0; padding: 0 0 0 2em; }
li p:last-child { margin:0 }
dd { margin: 0 0 0 2em; }

img { border: 0; -ms-interpolation-mode: bicubic; vertical-align: middle; }

table { border-collapse: collapse; border-spacing: 0; }
td { vertical-align: top; }

@media only screen and (min-width: 480px) {
body{font-size:14px;}
}

@media only screen and (min-width: 768px) {
body{font-size:16px;}
}

@media print {
  * { background: transparent !important; color: black !important; filter:none !important; -ms-filter: none !important; }
  body{font-size:12pt; max-width:100%; outline:none;}
  a, a:visited { text-decoration: underline; }
  hr { height: 1px; border:0; border-bottom:1px solid black; }
  a[href]:after { content: " (" attr(href) ")"; }
  abbr[title]:after { content: " (" attr(title) ")"; }
  .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; }
  pre, blockquote { border: 1px solid #999; padding-right: 1em; page-break-inside: avoid; }
  tr, img { page-break-inside: avoid; }
  img { max-width: 100% !important; }
  @page :left { margin: 15mm 20mm 15mm 10mm; }
  @page :right { margin: 15mm 10mm 15mm 20mm; }
  p, h2, h3 { orphans: 3; widows: 3; }
  h2, h3 { page-break-after: avoid; }
}
</style><title>README</title></head><body><h1 id="localstorage">localStorage</h1>
<p>make a cross domain able localStorage for most of the browser with localStorage and Flashcookie</p>
<h2 id="_1">推荐的使用方式</h2>
<p>localStorage比较适合用来存储那些在页面加载完成之后才需要填充的数据，而不是一些开关</p>
<p>比如在页面加载的瞬间，判断某个值，然后选择是否跳转页面。</p>
<p>如果是原生的localStorage，是能够在head里面实现这一功能的。可是对于IE6,7，需要使用Flashcookie来实现本地存储，那么就必须是把swf文件放在body标签里面，所以需要在document ready之后使用才是最安全的</p>
<p>而这个整个FlashCookie和localStorage的方案，在使用的时候，要让二者都有效，就使得代码是没法在head里面去读取本地存储的数据</p>
<h2 id="_2">接口说明</h2>
<p>所有的接口都是仿造localStorage进行设计的，返回值也是类似</p>
<p>关于domain，如果是当前域下，可以不用写域名直接写null即可。在非当前域的时候，域名的完整书写格式是：协议+hostname+端口号(如果是默认的80，则可省略不写)。比如：http://www.7k7k.com/。如果协议是http://，端口是80，则域名可简写为hostname ，比如上面的地址就能写成www.7k7k.com。需要这样设定的原因是localStorage的来源限制策略就是如此</p>
<p>往本地存储的数据，要做好取出来会变成字符串的心理准备。所以最合适存储的数据格式是number和string</p>
<h3 id="getitem">getItem</h3>
<p>方法功能：获取指定域名下的key对应的value值，如果不存在，返回null，存在，返回的都是字符串</p>
<p>调用方式：</p>
<pre><code>qike.localStorage.getItem(key,domain,callback);
</code></pre>
<p>参数说明：</p>
<ul>
<li>key 是要获取的键值对的名字</li>
<li>doamin 是这个键值对所在的域名</li>
<li>callback 是取得key对应的value之后的回调函数，会传递value到callback中</li>
</ul>
<h3 id="setitem">setItem</h3>
<p>方法功能：给指定域名下的key设定一个value值。如果key已经存在，则覆盖原有的值；如果key不存在，则新建一个</p>
<p>调用方式：</p>
<pre><code>qike.localStorage.setItem(key,value,domain,callback);
</code></pre>
<p>参数说明：</p>
<ul>
<li>key 是要赋值的键值对的名字</li>
<li>value 是给key设定的值</li>
<li>doamin 是这个键值对所在的域名</li>
<li>callback 是取得key对应的value之后的回调函数 callback接收的参数是setItem方法的返回值，一般是undefined</li>
</ul>
<h3 id="removeitem">removeItem</h3>
<p>方法功能：根据key，移除给指定域名下对应的键值对。如果该域名下不存在这个key，则返回null，否则返回undefined</p>
<p>调用方式：</p>
<pre><code>qike.localStorage.removeItem(key,domain,callback);
</code></pre>
<p>参数说明：</p>
<ul>
<li>key 是要移除的键值对的名字</li>
<li>doamin 是这个键值对所在的域名</li>
<li>callback 是取得key对应的value之后的回调函数 callback接收的参数是removeItem方法的返回值，一般是undefined</li>
</ul>
<h3 id="key">key</h3>
<p>方法功能：此方法主要用于遍历本地存储的数据，可以将本地存储的数据看成类数组的一个对象。传递一个索引进去之后，会返回对应的key，如果索引值超出范围，则返回null。这个功能在实现上有些问题，localStorage和FlashCookie对数据的排序有些不同，所以建议只进行遍历，而不是根据某个索引取特定的哪一个key</p>
<p>调用方式：</p>
<pre><code>qike.localStorage.key(index,domain,callback);
</code></pre>
<p>参数说明：</p>
<ul>
<li>index 索引值</li>
<li>doamin 是索引的数据所在的域名</li>
<li>callback 是取得key对应的value之后的回调函数 callback接收的参数是key方法返回的key的名字</li>
</ul>
<h3 id="clear">clear</h3>
<p>方法功能： 此方法是用来清空所有指定域名下的本地存储的数据</p>
<p>调用方式：</p>
<pre><code>qike.localStorage.clear(domain,callback);
</code></pre>
<p>参数说明：</p>
<ul>
<li>doamin 是要清空的数据所在的域名</li>
<li>callback 是取得key对应的value之后的回调函数 callback接收的参数是clear方法的返回值，一般是undefined</li>
</ul>
<h2 id="_3">关于实施方案的部署</h2>
<p>首先，项目页面里面需要引入localStorage.js</p>
<p>然后是localStorage的跨域问题，需要在各个域名的服务器下，放置一个head里面有document.domain='(your domain)'的空localStorage.html文件。这个是跨域获取localStorage数据的时候，需要通过iframe的方式加载该页面到当前页面，然后访问iframe里面的contentWindow，取到对应域名下的localStorage数据。</p>
<p>接着是FlashCookie的部署。FlashCookie的数据是按照swf文件的地址进行划分的。为了能实现不同域名下有不同数据的效果。需要在不同域名的服务器下放置一份localStorage.swf。</p>
<p>html和swf的放置路径必须是各自保持一个相同的格式。然后在localStorage.js里面有两个参数：qike.localStorage.baseHtmlUrl和qike.localStorage.baseFlashUrl。这两个值分别是html和swf在各个服务器下的摒除domain之后的路径。</p>
<p>假设localStorage.html和localStorage.swf都是放在根目录下。那么qike.localStorage.baseHtmlUrl='localStorage.html',qike.localStorage.baseHtmlUrl='localStorage.swf'</p></body></html>
